class ReenergizeSpell : ArcanumSpell
{
	override int GetIndex() { return 60; }
	override class<ArcanumSpellTree> GetTree() { return 'ArcanumTreeAlteration'; }
	override string GetName() { return "Reenergize"; }
	override int GetSpellType() { return SType_SelfOrMass | SType_Targeted; }
	override string GetDescription() { return String.Format("Restores up to \c[Gold]%i\c- battery charge, filling partial batteries first.", 20 * Level); }
	override string GetTechnicalInfo() { return "Self, Targeted, Touch"; }
	override int GetExperienceGain() { return 5; }
	override int GetCost() { return 20; }
	override int GetAggroGain() { return 10; }
	override class<ArcanumSigil> GetSigil() { return 'ReenergizeSigil'; }
}


class ReenergizeSigil : ArcanumSigil
{
	override void ActivateTargeted()
	{
		let plr = HDPlayerPawn(AimTarget());
		if (plr && plr.Health > 0 && Distance3D(plr) <= HDCONST_ONEMETRE * 2)
		{
			RechargeBatteries(plr);
		}
	}

	override void ActivateSelfOrMass()
	{
		let plr = HDPlayerPawn(master);
		if (plr)
		{
			RechargeBatteries(plr);
		}
	}

	private void RechargeBatteries(HDPlayerPawn plr)
	{
		bool HasPlayedSound;
		int RemainingCharges = 20 * SigilLevel;
		let Stack = HDBattery(plr.FindInventory("HDBattery"));
		if (Stack)
		{
			while (RemainingCharges > 0)
			{
				int Index = AceCore.GetHighestBattery(Stack, Stack.MaxPerUnit);
				if (Index > -1)
				{
					if (!HasPlayedSound)
					{
						PlayCastSound(self, "Arcanum/Alteration/Reenergize");
						HasPlayedSound = true;
					}
					int AmountToMax = Stack.MaxPerUnit - Stack.Mags[Index];
					Stack.Mags[Index] += min(RemainingCharges, AmountToMax);
					RemainingCharges -= AmountToMax;
				}
				else
				{
					break;
				}
			}
		}
	}

	override void InitRuneSlots()
	{
		vector2 Size = (2.2, 3.66);
		CreateRuneSlot((-4.6, 8.40), Size, 0.65, 1.0); CreateRuneSlot((4.6, 8.40), Size, 0.65, 1.0);
		CreateRuneSlot((-4.6, -8.40), Size, 0.65, 1.0); CreateRuneSlot((4.6,- 8.40), Size, 0.65, 1.0);

		CreateRuneSlot((-8.5, 4.5), Size, 0.65, 1.0); CreateRuneSlot((8.5, 4.5), Size, 0.65, 1.0);
		CreateRuneSlot((-8.5, -4.5), Size, 0.65, 1.0); CreateRuneSlot((8.5,- 4.5), Size, 0.65, 1.0);
	}

	Default
	{
		ArcanumSigil.FadeOutSpeedMult 2.0;
		StencilColor "33FF00";
	}

	States
	{
		Spawn:
			CRAL G 0;
			Goto Super::Spawn;
	}
}