class RevitalizationSpell : ArcanumSpell
{
	override class<ArcanumSpellTree> GetTree() { return 'ArcanumTreeRestoration'; }
	override int GetIndex() { return 50; }
	override string GetName() { return "Revitalization"; }
	override int GetSpellType() { return SType_SelfOrMass; }
	override int GetCatalystAmount() { return 1000; }
	override string GetDescription() { return String.Format("Heals all visible nearby entities by 75%% of their total health. Heals \c[Gold]%i\c- burns. Reduces aggro by \c[Gold]%i\c-, but only for others. Restores lost blood. Removes incap.", 40 * Level, 20 * Level); }
	override string GetTechnicalInfo() { return "Mass"; }
	override int GetExperienceGain() { return 10; }
	override int GetCost() { return 120; }
	override int GetAggroGain() { return 25; }
	override class<ArcanumSigil> GetSigil() { return 'RevitalizationSigil'; }
}

class RevitalizationSigil : ArcanumSigil
{
	override void ActivateSelfOrMass()
	{
		HDMobBase Other;
		HDPlayerPawn PActor;

		BlockThingsIterator it = BlockThingsIterator.Create(self, 1024);
		while (it.Next())
		{
			if (!CheckSight(it.thing) || it.thing.Health <= 0)
			{
				continue;
			}

			Other = HDMobBase(it.thing);
			PActor = HDPlayerPawn(it.thing);

			if (PActor)
			{
				if (PActor != master)
				{
					PActor.aggravateddamage -= 20 * SigilLevel;
				}

				PActor.bloodloss = 0;
				PActor.burncount -= 40 * SigilLevel;
				PActor.MaxHealth(); // [Ace] So everything is clamped.
				PActor.GiveBody(int(PActor.MaxHealth() * 0.75));
				PActor.incaptimer = 0;
			}
			else if (Other)
			{
				Other.bodydamage = 0;
				Other.GiveBody(int(Other.SpawnHealth() * 0.75));
			}
		}
		PlayCastSound(self, "Arcanum/Restoration/Revitalization");
	}

	override void InitRuneSlots()
	{
		vector2 BigSize = (6, 10);
		CreateRuneSlot((-32.5, 0), BigSize, 1.75, 1.25); CreateRuneSlot((32.5, 0), BigSize, 1.75, 1.25);
		CreateRuneSlot((0, 32.5), BigSize, 1.75, 1.25); CreateRuneSlot((0, -32.5), BigSize, 1.75, 1.25);

		vector2 SmallSize = (5, 8.333);
		CreateRuneSlot((-12.3, 12.3), SmallSize, 1.4, 1.25); CreateRuneSlot((12.3, 12.3), SmallSize, 1.4, 1.25);
		CreateRuneSlot((-12.3, -12.3), SmallSize, 1.4, 1.25); CreateRuneSlot((12.3, -12.3), SmallSize, 1.4, 1.25);
	}

	Default
	{
		Height 44;
		Radius 50;
		StencilColor "FF66FF";
	}

	States
	{
		Spawn:
			CRRE F 0;
			Goto Super::Spawn;
	}
}