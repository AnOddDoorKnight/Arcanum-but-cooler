class ResurrectSpell : ArcanumSpell
{
	static const int PowerLevel[] =
	{
		10, 5,
		25, 15,
		50, 30
	};
	override int GetIndex() { return 30; }
	override class<ArcanumSpellTree> GetTree() { return 'ArcanumTreeRestoration'; }
	override string GetName() { return "Resurrect"; }
	override int GetSpellType() { return SType_SelfOrMass; }
	override int GetManaCost() { return 100; }
	override string GetDescription() { return String.Format("Resurrects up to \c[Gold]%i\c- targets within \c[Gold]%i\c-m of where the sigil was cast.", PowerLevel[2 * (Level - 1)], PowerLevel[1 + 2 * (Level - 1)]); }
	override string GetTechnicalInfo() { return "Mass"; }
	override int GetExperienceGain() { return 5; }
	override class<ArcanumSigil> GetSigil() { return 'ResurrectSigil'; }
}

class ResurrectSigil : ArcanumSigil
{
	override void ActivateSelfOrMass()
	{
		bool HasPlayedSound;
		int RevivesLeft = ResurrectSpell.PowerLevel[2 * (SigilLevel - 1)];
		double MaxRange = HDCONST_ONEMETRE * ResurrectSpell.PowerLevel[1 + 2 * (SigilLevel - 1)];

		BlockThingsIterator it = BlockThingsIterator.Create(self, MaxRange);
		while (RevivesLeft > 0 && it.Next())
		{
			if (Distance3D(it.thing) > MaxRange)
			{
				continue;
			}
			
			HDPlayerCorpse PCorpse = HDPlayerCorpse(it.thing);
			if (PCorpse && PCorpse.corpsegiver)
			{
				if (!HasPlayedSound)
				{
					PlayCastSound(self, "Arcanum/Restoration/Resurrect");
					HasPlayedSound = true;
				}

				PCorpse.corpsegiver.respawndelay = 0;
				RevivesLeft--;
			}
			else if (it.thing.bISMONSTER && it.thing.Health <= 0)
			{
				if (!HasPlayedSound)
				{
					PlayCastSound(self, "Arcanum/Restoration/Resurrect");
					HasPlayedSound = true;
				}

				if (it.thing is 'HDMobBase')
				{
					HDMobBase(it.thing).bodydamage = 0;
				}
				master.RaiseActor(it.thing, RF_NOCHECKPOSITION);
				it.thing.A_SetFriendly(true);
				RevivesLeft--;
			}
		}
	}

	override void InitRuneSlots()
	{
		vector2 Size = (8, 13.333);
		CreateRuneSlot((0, 0), Size, 2);
		CreateRuneSlot((0, 40), Size, 2);
		CreateRuneSlot((-39.2, 11.8), Size, 2); CreateRuneSlot((39.2, 11.8), Size, 2);
		CreateRuneSlot((-24, -33.8), Size, 2); CreateRuneSlot((24, -33.8), Size, 2);
	}

	Default
	{
		ArcanumSigil.AddAlpha 2.50;
		StencilColor "331177";
	}

	States
	{
		Spawn:
			CRRE D 0;
			Goto Super::Spawn;
	}
}