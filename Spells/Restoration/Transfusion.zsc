class TransfusionSpell : ArcanumSpell
{
	override int GetIndex() { return 20; }
	override class<ArcanumSpellTree> GetTree() { return 'ArcanumTreeRestoration'; }
	override string GetName() { return "Transfusion"; }
	override int GetSpellType() { return SType_Targeted; }
	override int, int, int GetCastRequirements() { return 300, 40, 300; }
	override string GetDescription() { return String.Format("Transfers 25%% of your blues and aggro to the target."); }
	override string GetTechnicalInfo() { return "Targeted, Touch"; }
	override int GetMaxLevel() { return 1; }
	override class<ArcanumSigil> GetSigil() { return 'TransfusionSigil'; }
}

class TransfusionSigil : ArcanumSigil
{
	override void ActivateTargeted()
	{
		let plr = HDPlayerPawn(AimTarget());
		let you = HDPlayerPawn(master);
		if (plr && you) // [Ace] <3
		{
			PlayCastSound(self, "Arcanum/Restoration/Transfusion");
			int blueAmount = int(you.regenblues * 0.25);
			you.regenblues -= blueAmount;
			plr.regenblues += blueAmount;

			int aggroAmount = int(you.aggravateddamage * 0.25);
			you.aggravateddamage -= aggroAmount;
			plr.aggravateddamage += aggroAmount;
		}
	}

	override void InitRuneSlots()
	{
		vector2 Size = (4, 6.66);
		CreateRuneSlot((-13.25, 13.25), Size, 1.25, 3);
		CreateRuneSlot((13.25, 13.25), Size, 1.25, 3);
		CreateRuneSlot((-13.25, -13.25), Size, 1.25, 3);
		CreateRuneSlot((13.25, -13.25), Size, 1.25, 3);
	}

	Default
	{
		ArcanumSigil.FadeOutSpeedMult 3.0;
		StencilColor "3333FF";
	}

	States
	{
		Spawn:
			CRRE C 0;
			Goto Super::Spawn;
	}
}