class HemostasisSpell : ArcanumSpell
{
	override class<ArcanumSpellTree> GetTree() { return 'ArcanumTreeRestoration'; }
	override int GetIndex() { return 0; }
	override string GetName() { return "Hemostasis"; }
	override int GetSpellType() { return SType_SelfOrMass | SType_Targeted; }
	override int GetCatalystAmount() { return 75; }
	override string GetDescription() { return String.Format("Closes open wounds and fixes \c[Gold]%i%%\c- of unstable wounds.", 20 * Level); }
	override string GetTechnicalInfo() { return "Self, Targeted, Touch"; }
	override int GetExperienceGain() { return 2; }
	override int GetCost() { return 15; }
	override int GetAggroGain() { return 1; }
	override class<ArcanumSigil> GetSigil() { return 'HemostasisSigil'; }
}

class HemostasisSigil : ArcanumSigil
{
	override void ActivateTargeted()
	{
		let plr = HDPlayerPawn(AimTarget());
		if (plr && plr.Health > 0 && Distance3D(plr) <= 42 * 2)
		{
			DoHealing(plr);
		}
	}

	override void ActivateSelfOrMass()
	{
		let plr = HDPlayerPawn(master);
		if (plr)
		{
			DoHealing(plr);
		}
	}

	private void DoHealing(HDPlayerPawn plr)
	{
		PlayCastSound(self, "Arcanum/Restoration/Hemostasis");
		plr.unstablewoundcount *= int(1.0 - 0.2 * SigilLevel);
		plr.woundcount = 0;
	}

	override void InitRuneSlots()
	{
		vector2 Size = (4, 6.66);
		CreateRuneSlot((-6, 14.5), Size, 1.0, 1.5); CreateRuneSlot((6, 14.5), Size, 1.0, 1.5);
		CreateRuneSlot((-11, 5), Size, 1.0, 1.5); CreateRuneSlot((11, 5), Size, 1.0, 1.5);
		CreateRuneSlot((-11, -5), Size, 1.0, 1.5); CreateRuneSlot((11, -5), Size, 1.0, 1.5);
		CreateRuneSlot((-6, -14.5), Size, 1.0, 1.5); CreateRuneSlot((6, -14.5), Size, 1.0, 1.5);
	}

	Default
	{
		ArcanumSigil.FadeOutSpeedMult 2.0;
		StencilColor "FF9E9E";
	}

	States
	{
		Spawn:
			CRRE A 0;
			Goto Super::Spawn;
	}
}
